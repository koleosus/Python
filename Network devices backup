from netmiko import ConnectHandler
from datetime import datetime
import email_helper
import time

## Getting system date 
day=time.strftime('%d')
month=time.strftime('%m')
year=time.strftime('%Y')
today=day+"-"+month+"-"+year

## Print banner
print ('#### Welcome to BackUp configuration script !!! ####')
print ('#### This script will save all configurations,  ####')
print ('#### from Site controllers and IPOPs to file.   ####')
print ('####           Backup for ' + today + '            ####' + '\n')

## Email hendler
def email_handler(message):
    sender = 'wifi.support@motorolasolutions.com'
    recipient = 'wifi.support@motorolasolutions.com'
    subject = 'Backups completed'
    send_mail(recipient, subject, message, sender)
    print ('Email notification sent to {}').format(recipient)

## Main function
def main():
	## Create LOG file
	logfile = today + ' - log.txt'
	logging = open(logfile, 'w+')
	start_time = datetime.now()
	
	## Open file with all ip addresses of devices
	try:
		with open('iplist.txt') as f:
			devices_list = f.read().splitlines()
	except:
		logging.write(today + " - Unable to read iplist.txt file.\n")
		print ("Unable to read iplist.txt file.\n")
		f.close()
	
	for device in devices_list:
		## Devices object for connection
		ip_of_device = device
		device_object = {
        'device_type': 'extreme',
        'ip': ip_of_device,
        'username': 'username',
        'password': 'password'}
		try:
			net_connection = ConnectHandler(**device_object)
			## Get the hostname
			hostname = net_connection.find_prompt().split('>')[0]
			print ("Connected to " + hostname + " ...")

			## Send 'no page' command to get all output on one page
			net_connection.send_command("no page")
			time.sleep(1)
			print ("Reading running config from the device ...")
			## Send 'show run' command to get configurations
			output = net_connection.send_command("show run")
			time.sleep(3)
			filename = hostname + '-' + today + '.txt'
			saveconfig = open('\backups\' + filename, 'w+')
			print ("Writing configurations to file ...")
			try:
				saveconfig.write(output)
				saveconfig.close()
				time.sleep(2)
			except:
				logging.write(today + " - Unable to write configuration of " + hostname + " to file.\n")
				print ("Unable to write configuration of " + hostname + " to file.\n")
				saveconfig.close()
			net_connection.disconnect()
		except:
			logging.write(today + " - Access to " + device['host'] + " failed, backup did not taken.\n")
			print ("Access to " + device['host'] + " failed, backup did not taken.\n")

	logging.close()
	print ("All configurations backups are made, have a nice day !!!")
	email_handler("Backup complete")
	
	print("\nElapsed time: " + str(datetime.now() - start_time))

if __name__ == "__main__":
    main()
